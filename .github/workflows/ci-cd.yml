name: CI/CD

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]

jobs:
  # 1. ビルド & テスト (CI)
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: "20"

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Lint/TypeCheck/Test
        run: |
          pnpm biome check .

  # 2. デプロイ (CD) - mainブランチへのpush時のみ実行
  deploy:
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    needs: build-and-test # 上のジョブが成功したら実行
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: "20"

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Install wrangler
        run: npm install -g wrangler@latest

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      # (A) Workers (Hono API) デプロイ
      - name: Build API
        working-directory: apps/api
        run: pnpm run build

      - name: Publish to Cloudflare Workers
        working-directory: apps/api
        run: pnpm run deploy
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}

      # (B) D1マイグレーション適用 (SQLファイルを実行)
      - name: Apply D1 migrations (if any)
        working-directory: apps/api
        run: |
          for f in drizzle/*.sql; do
            wrangler d1 execute logyuu --remote --file="$f"
          done
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
